Console.OutputEncoding = System.Text.Encoding.UTF8;
Console.WriteLine("\n" + Enumerable.Join(new[] { "♤", "♡", "♢", "♧" }, Enumerable.Range(1, 13), suit => 0, no => 0, (suit, no) => (Suit: suit, No: no)).OrderBy(x => Guid.NewGuid()).Take(5).OrderBy(x => x.No).ThenBy(x => x.Suit).Select((card, index) => { Console.Write($"{(index == 0 ? "" : ", ")}{card.Suit} {card.No}"); return card; }).ToArray() switch { var hands when hands.GroupBy(x => x.Suit).Count() == 1 && Enumerable.SequenceEqual(hands.Take(2).Select(x => x.No), new[] { 1, 10 }) => "ロイヤルストレートフラッシュ", var hands when hands.GroupBy(x => x.Suit).Count() == 1 && (hands.Last().No - hands.First().No) == 4 => "ストレートフラッシュ", var hands when hands.GroupBy(x => x.No).Max(x => x.Count()) == 4 => "フォーカード", var hands when Enumerable.SequenceEqual(hands.GroupBy(x => x.No).Select(x => x.Count()).OrderByDescending(x => x).Take(2), new[] { 3, 2 }) => "フルハウス", var hands when hands.GroupBy(x => x.Suit).Count() == 1 => "フラッシュ", var hands when (hands.GroupBy(x => x.No).Count() == 5 && (hands.Last().No - hands.First().No) == 4 || Enumerable.SequenceEqual(hands.Take(2).Select(x => x.No), new[] { 1, 10 })) => "ストレート", var hands when hands.GroupBy(x => x.No).Max(x => x.Count()) == 3 => "スリーカード", var hands when Enumerable.SequenceEqual(hands.GroupBy(x => x.No).Select(x => x.Count()).OrderByDescending(x => x).Take(2), new[] { 2, 2 }) => "ツーペア", var hands when hands.GroupBy(x => x.No).Max(x => x.Count()) == 2 => "ワンペア", _ => "ブタ" });
